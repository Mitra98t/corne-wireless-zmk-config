/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        base {
            label = "Base";
            bindings = <
&kp CAPS   &kp Q           &kp W           &kp E             &kp R               &kp T          &kp Y        &kp U        &kp I         &kp O            &none       &kp BACKSPACE
&kp MINUS  &mt LEFT_GUI A  &mt LEFT_ALT S  &mt LEFT_SHIFT D  &mt LEFT_CONTROL F  &kp G          &kp H        &mt RCTRL J  &mt RSHIFT K  &mt RIGHT_ALT L  &mt RGUI P  &kp SEMI
&kp UNDER  &kp Z           &kp X           &kp C             &kp V               &kp B          &kp N        &kp M        &kp COMMA     &kp DOT          &kp FSLH    &kp DELETE
                                           &kp ESCAPE        &lt 2 TAB           &lt 1 SPACE    &lt 3 ENTER  &lt 5 GRAVE  &lt 4 APOS
            >;
        };

        numbers {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp EQUAL  &kp N7        &kp N8        &kp N9        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp PLUS   &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp ASTERISK  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp MINUS  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp SLASH     &trans
                        &trans  &trans  &trans    &kp COMMA  &kp DOT       &kp N0
            >;
        };

        navigation {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans         &trans        &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LEFT  &kp DOWN       &kp UP_ARROW  &kp RIGHT  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP   &kp END    &trans
                        &trans  &trans  &trans    &trans  &trans    &trans
            >;
        };

        symbols {
            bindings = <
&trans  &kp AT         &kp CARET      &kp MINUS     &kp LS(PLUS)  &kp LS(STAR)    &kp FSLH      &kp BSLH      &kp LS(POUND)  &kp LS(PRCNT)  &trans         &trans
&trans  &kp LS(COLON)  &kp LS(UNDER)  &kp LS(LT)    &kp LS(GT)    &kp LS(PIPE)    &kp LS(AMPS)  &kp LS(EXCL)  &kp EQUAL      &kp LS(DLLR)   &kp SEMI       &trans
&trans  &kp TILDE      &trans         &kp LS(LBRC)  &kp LBKT      &kp LS(LPAR)    &kp LS(RPAR)  &kp RBKT      &kp LS(RBRC)   &kp DOT        &kp LS(QMARK)  &trans
                                      &trans        &trans        &trans          &trans        &trans        &trans
            >;
        };

        functions {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1 &bt BT_SEL 2 &trans  &trans  &trans    &trans  &kp F9 &kp F10  &kp F11  &kp F12  &trans
&trans      &trans  &trans  &trans  &trans  &trans    &trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans
&bt BT_CLR  &trans  &trans  &trans  &trans  &trans    &trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans
                            &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        media {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp C_VOLUME_DOWN     &kp K_MUTE        &kp C_VOLUME_UP       &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp K_PREVIOUS        &kp K_PLAY_PAUSE  &kp K_NEXT            &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp C_BRIGHTNESS_DEC  &trans            &kp C_BRIGHTNESS_INC  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans                &trans
            >;
        };
    };

};
